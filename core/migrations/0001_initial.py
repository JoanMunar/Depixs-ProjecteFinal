# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-05-21 09:06
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'users', verbose_name='Imagen')),
                ('name', models.CharField(blank=True, default=None, max_length=69)),
                ('points', models.CharField(blank=True, default=None, max_length=60)),
                ('gender', models.IntegerField(choices=[(0, 'Hombre'), (1, 'Mujer')], default=0)),
                ('preference', models.IntegerField(choices=[(0, 'Hombre'), (1, 'Mujer')], default=0)),
                ('id_instagram', models.CharField(blank=True, default=None, max_length=60)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creaci\xf3n')),
                ('timestamp_last_interaction', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de \xfaltima interacci\xf3n')),
                ('percent_depix', models.IntegerField(default=0, verbose_name='Porciento Depix')),
                ('user_one', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_user_one', to='core.User', verbose_name=b'Usuario 1')),
                ('user_two', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_user_two', to='core.User', verbose_name=b'Usuario 2')),
            ],
        ),
        migrations.CreateModel(
            name='Colleges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colleges', models.CharField(blank=True, default=None, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name=b'Mensaje')),
                ('message_len', models.PositiveIntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de env\xedo')),
                ('unread', models.BooleanField(default=True, verbose_name=b'Sin leer')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User', verbose_name=b'Autor')),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Chat')),
            ],
            options={
                'ordering': ('-timestamp',),
                'verbose_name': 'Interacci\xf3n',
                'verbose_name_plural': 'Interacciones',
            },
        ),
        migrations.CreateModel(
            name='Studies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studies', models.CharField(blank=True, default=None, max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='college',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Colleges'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='invited_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.User', verbose_name=b'Invitado por:'),
        ),
        migrations.AddField(
            model_name='user',
            name='study',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Studies'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
